name: CI

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  scan_ruby:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Scan for common Rails security vulnerabilities using static analysis
        run: bin/brakeman --no-pager -q -w2
        continue-on-error: true

      - name: Security audit dependencies
        run: bin/bundler-audit --update
        continue-on-error: true

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Lint code for consistent style
        run: bin/rubocop --parallel -f github

  test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        ports:
          - 3306:3306
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_ROOT_HOST: "%"
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=5s
          --health-timeout=3s
          --health-retries=5
    env:
      RAILS_ENV: test
      DATABASE_URL: mysql2://root:@127.0.0.1:3306/rewards_app_test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Wait for MySQL
        run: |
          until mysqladmin -h 127.0.0.1 -P 3306 -u root ping --silent; do
            echo "Waiting for MySQL to be ready..."
            sleep 2
          done
          echo "MySQL is ready!"

      - name: Create test database
        run: bin/rails db:create

      - name: Set up database schema
        run: bin/rails db:schema:load

      - name: Run tests
        run: bin/rspec
